@page "/FizzBuzz/fizzbuzzexampleValidation"
@using DevDotNet.Componets.Validators.FizzBuzz


<div class="pageStyle container-xxl my-3">

    <h3>Solve the FizzBuzz Challenge with validation</h3>
    <p>Enter your values, press the button, and see how the FizzBuzz logic works.</p>
    <p>For the values to be valid: Fizz less than Buzz and Stop is greater than fizz times buzz and less than 5 times that value. </p>
    <EditForm EditContext="editContext" OnValidSubmit="GenerateFizzBuzzResults">
        <DataAnnotationsValidator />
        <FizzBuzzValidator />
        <div class="border-secondary-subtle rounded border p-4">
            <div class="row row-cols-1 row-cols-md-3 align-items-start">
                <div class="col">
                    <label for="fizzValue" class="form-label">
                        Fizz Value:
                    </label>
                    <InputNumber id="fizzValue" class="form-control" @bind-Value="fizzBuzz.FizzValue" aria-describedby="fizzHelp" aria-label="Fizz Value" placeholder="Fizz Value" min="2"/>
                    <div id="fizzHelp" class="form-text text-muted">
                        Multiples of @fizzBuzz.FizzValue are replaced with "Fizz"
                    </div>
                    <ValidationMessage For="@(() => fizzBuzz.FizzValue)" />
                </div>
                <div class="col">
                    <label for="buzzValue" class="form-label">
                        Buzz Value:
                    </label>
                    <InputNumber id="buzzValue" class="form-control" @bind-Value="fizzBuzz.BuzzValue" aria-describedby="buzzHelp" aria-label="Buzz Value" placeholder="Buzz Value" min="3"/>
                    <div id="buzzHelp" class="form-text text-muted">
                        Multiples of @fizzBuzz.BuzzValue are replaced with "Buzz"
                    </div>
                    <ValidationMessage For="@(() => fizzBuzz.BuzzValue)" />
                </div>
                <div class="col">
                    <label for="stopValue" class="form-label">
                        Stop Value:
                    </label>
                    <InputNumber id="stopValue" class="form-control" @bind-Value="fizzBuzz.StopValue" aria-describedby="StopHelp" aria-label="Stop Value" placeholder="Stop Value" min="6"/>
                    <div id="stopHelp" class="form-text text-muted">
                        The output will stop at @fizzBuzz.StopValue
                    </div>
                    <ValidationMessage For="@(() => fizzBuzz.StopValue)" />
                </div>
            </div>
            <div class="row">
                <div class="col mt-2 text-end">
                    <button type="submit" class="btn btn-primary" aria-label="Generate FizzBuzz results">Generate</button>
                </div>
            </div>
        </div>
    </EditForm>
    @if (fizzBuzzResults.Count > 0)
    {
        <h4 class="mt-5">FizzBuzz Results:</h4>
        <div class="row row-cols-5">
            @foreach(var result in fizzBuzzResults)
            {
                <FizzBuzzItem FizzBuzzValue="@result" />
            }
        </div>
    }
</div>

@code {
    private FizzBuzzModel fizzBuzz = new();

    private List<string> fizzBuzzResults = new();
    private int fizzBuzzProduct;

    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(fizzBuzz);
    }
    private void GenerateFizzBuzzResults()
    {
        fizzBuzzResults.Clear();
        for(int i = 1; i <= fizzBuzz.StopValue; i++)
        {
            if (i % fizzBuzz.FizzValue == 0 && i % fizzBuzz.BuzzValue == 0)
            {
                fizzBuzzResults.Add("FizzBuzz");
            }
            else if (i % fizzBuzz.FizzValue == 0)
            {
                fizzBuzzResults.Add("Fizz");
            }
            else if (i % fizzBuzz.BuzzValue == 0)
            {
                fizzBuzzResults.Add("Buzz");
            }
            else
            {
                fizzBuzzResults.Add(i.ToString());
            }
        }
    }

}


